const { Language, util } = require('klasa');

module.exports = class extends Language {
	constructor(...args) {
		super(...args);
		this.language = {
			/**
			 * @Defaults
			 */
			DEFAULT: key => `${key} has not been localized for en-US yet.`,
			DEFAULT_LANGUAGE: 'Default Language',

			// Prompts
			MESSAGE_PROMPT_TIMEOUT: 'The prompt has timed out.',
			MESSAGE_PROMPT_CANCELED: 'Canceled command.',
			MULTIPLE_ITEMS_FOUND_PROMPT: results => `Multiple items found. Please choose one of the following, or type cancel.${results}`,
			ANSWER_CANCEL_PROMPT: 'cancel',

			/**
			 * @Inhibitors
			 */
			INHIBITOR_COOLDOWN: remaining => `You have just used this command. You can use this command again in ${remaining} second${remaining === 1 ? '' : 's'}.`,
			INHIBITOR_DISABLED: 'This command is currently disabled.',
			INHIBITOR_MISSING_BOT_PERMS: (missing) => `I don't have enough permissions to execute this command.\n	   Missing: \`${missing}\``,
			INHIBITOR_MISSING_USER_PERMS: (missing) => `You don't have enough permissions to execute this command.\n	   Missing: \`${missing}\``,
			INHIBITOR_NSFW: 'You may not use NSFW commands in this channel.',
			INHIBITOR_PERMISSIONS: 'You do not have permission to use this command.',
			INHIBITOR_REQUIRED_SETTINGS: settings => `The guild is missing the \`${settings.join('` `')}\` guild setting${settings.length !== 1 ? 's' : ''} and thus the command cannot run.`,
			INHIBITOR_RUNIN: types => `This command is only available in ${types} channels.`,
			/**
			 * @Monitors
			 */
			MONITOR_CHATFILTER_AUTHOR: 'Author',
			MONITOR_CHATFILTER_CHANNEL: 'Channel',
			MONITOR_CHATFILTER_MESSAGE: 'Message',
			MONITOR_CHATFILTER_MSGDELETED: author => `${author}, your message was deleted because it contained one or more words that are blocked by this server's chat filter.`,

			/**
			 * @Processes
			 */
			BOT_MAIN_SERVER_NOT_SET: 'Please set the BOT_MAIN_SERVER key to the bot\'s main server id in the .env file!',
			BOT_MAIN_SERVER_INVALID: 'An invalid server id was provided for the BOT_MAIN_SERVER key in the .env file!',

			/**
			 * @Commands
			 */
			LOADING_MESSAGE: "Loading...",
			COMMAND_CONF_NOKEY: 'You must provide a key',
			COMMAND_CONF_NOVALUE: 'You must provide a value',
			COMMAND_CONF_GUARDED: name => `${util.toTitleCase(name)} may not be disabled.`,
			COMMAND_CONF_UPDATED: (key, response) => `Successfully updated the key **${key}**: \`${response}\``,
			COMMAND_CONF_KEY_NOT_ARRAY: "This key is not array type. Use the action 'reset' instead.",
			COMMAND_CONF_GET_NOEXT: key => `The key **${key}** does not seem to exist.`,
			COMMAND_CONF_GET: (key, value) => `The value for the key **${key}** is: \`${value}\``,
			COMMAND_CONF_RESET: (key, response) => `The key **${key}** has been reset to: \`${response}\``,
			COMMAND_CONF_NOCHANGE: key => `The value for **${key}** was already that value.`,
			COMMAND_CONF_SERVER: (key, list) => `**Guild Settings${key}**\n${list}`,
			COMMAND_CONF_USER: (key, list) => `**User Settings${key}**\n${list}`,
			COMMAND_PING: 'Ping?',
			COMMAND_PINGPONG: (latencyms, latencyapims) => `Latency: ${latencyms}ms \nAPI Latency: ${latencyapims}ms`,
			SETTING_CURRENT_SERVER_PREFIX: prefix => `The current server prefix is \`${prefix}\``,
			SETTING_PREFIX_CAN_ALSO_MENTION: 'You can also mention me and I will answer to your commands.',
			SETTING_PREFIX_YOU_CAN_NOW_USE: new_prefix => `You can now use \`${new_prefix}\` to run my commands in this server.`,
			SETTING_PREFIX_ILL_ANSWER_TO_MENTIONS: "I'll still answer to your commands if you mention me.",
			SETTING_RESET_PREFIX: `Switched back the guild's prefix back to \`${this.client.options.prefix}\`!`,
			COMMAND_HELP_DESCRIPTION: 'Display help for a command.',
			COMMAND_HELP_DM: '📥 | The list of commands you have access to has been sent to your DMs.',
			COMMAND_HELP_NODM: "❌ | You have DMs disabled, I couldn't send you the commands in DMs.",
			COMMAND_HELP_USAGE: usage => `Usage :: ${usage}`,
			COMMAND_HELP_EXTENDED_DESC: '**Extended Help:**',
			COMMAND_HELP_EXTENDED: 'Extended Help ::',
			COMMAND_HELP_DESCRIPTION_DESC: '**Description:**',
			COMMAND_HELP_USAGE_DESC: '**Usage:**',
			COMMAND_HELP_ALIASES_DESC: '**Aliases:**',
			COMMAND_HELP_NO_ALIASES_DESC: 'no aliases',
			COMMAND_HELP_CATEGORIES: category => `**${category} Commands**:\n`,
			COMMAND_HELP_CATEGORIES_TITLE: category => `${category} Commands`,
			COMMAND_TRANSLATE_EMBED_TITLE: 'Translation project',
			COMMAND_TRANSLATE_EMBED_DESCRIPTION: "Our goal is to offer LenoxBot in many different languages. It allows anyone to change the bot's language to their native language. However, there are over 10 thousand words to translate and that's why we need your help. \nYou have the opportunity to help us to translate LenoxBot by joining the project linked below! \n\nThank you and have fun!",
			COMMAND_TRANSLATE_EMBEDFIELDTITLE: 'Translation project link:',
			COMMAND_VOTE_EMBEDAUTHOR: 'Voting:',
			COMMAND_VOTE_EMBEDDESCRIPTION: link => `You will receive between 100-1000 credits for the upvote on the weekdays. \nFrom Friday to Sunday you will receive between 200-2000 credits. \n\nLink: ${link}`,
			COMMAND_GITHUB_EMBEDTITLE: "LenoxBot's GitHub Repository:",
			COMMAND_GITHUB_EMBEDDESCRIPTION: 'Our source code of LenoxBot (including the website) is available in our GitHub Repository. \n\nThe branch **master** is the branch which is currently online on LenoxBot. \nThe branch **testing** is the branch where we push all new updates and test it before realising them.',
			COMMAND_GITHUB_FIELDTITLELINK: "LenoxBot's GitHub Repository link:",
			COMMAND_GITHUB_FIELDTITLECONTRIBUTE: 'How do you contribute?',
			COMMAND_GITHUB_FIELDDESCRIPTIONCONTRIBUTE: "We would be very happy to receive help from developers who are able to help us out to fix bugs or add new features. Currently we are only 2 developers who can work on LenoxBot. If you're interested in helping us out, you can read the following document: https://github.com/LenoxBot/LenoxBot/blob/testing/.github/CONTRIBUTING.md",
			COMMAND_EVAL_CHOOSE_ONE_OF_THE_OPTIONS_PROMPT: _options => `Choose one of the following options: ${_options.join(', ')}`,
			ANSWER_EVAL_UPLOAD_TO_SERVICE_PROMPT: ['file', 'haste', 'hastebin', 'mystbin', 'console', 'log', 'default', 'none', 'cancel'],
			COMMAND_EVAL_TIMEOUT: seconds => `TIMEOUT: Took longer than ${seconds} seconds.`,
			COMMAND_EVAL_ERROR: (time, output, type) => `**Error**:${output}\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT: (time, output, type) => `**Output**:${output}\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT_CONSOLE: (time, type) => `Sent the result to console.\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT_FILE: (time, type) => `Sent the result as a file.\n**Type**:${type}\n${time}`,
			COMMAND_EVAL_OUTPUT_HASTEBIN: (time, url, type) => `Sent the result to hastebin: ${url}\n**Type**:${type}\n${time}\n`,
			COMMAND_EVAL_OUTPUT_MYSTBIN: (time, url, type) => `Sent the result to mystbin: ${url}\n**Type**:${type}\n${time}\n`,
			COMMAND_HEAPSNAPSHOT_CAPTURING: 'Capturing HEAP Snapshot. This may take a while...',
			COMMAND_HEAPSNAPSHOT_CAPTURED_DONE: path => `Captured in \`${path}\`, check! Remember, do NOT share this with anybody, it may contain a lot of sensitive data.`,
			COMMAND_HANGMAN_MENTIONPLAYQUESTION: (mention, author) => `${mention}, do you want to play hangman against ${author}?`,
			COMMAND_HANGMAN_EMBEDTITLESTART: 'Hangman game has been started!',
			COMMAND_HANGMAN_EMBEDTITLECHANCES: chances => `${chances}/15 chances left`,
			COMMAND_HANGMAN_EMBEDDESCRIPTION: word => `**Word to guess:**\n${word}`,
			COMMAND_HANGMAN_LETTERORWORDMESSAGE: author => `${author}, please send a letter (A-Z) or guess the word!`,
			COMMAND_HANGMAN_EMBEDTITLECORRECT: (author, letter) => `${author} guessed the letter "**${letter}**" correctly! 😄`,
			COMMAND_HANGMAN_EMBEDTITLECORRECTWORD: (author, word) => `${author} guessed the word "**${word}**" correctly! 😄`,
			COMMAND_HANGMAN_EMBEDDESCRIPTIONWITHTRIED: (triedletters, word) => `**Wrong letters used:** ${triedletters} \n\n**Word to guess:**\n${word}`,
			COMMAND_HANGMAN_MENTIONGAMEWON: (author, word) => `${author} won this game! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_EMBEDTITLEWRONG: (author, letter) => `${author} guessed the letter "**${letter}**" wrong! 😢`,
			COMMAND_HANGMAN_EMBEDTITLEWRONGWORD: (author, word) => `${author} guessed the word "**${word}**" wrong! 😢`,
			COMMAND_HANGMAN_MENTIONNOWIN: word => `Nobody won! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_MENTIONCORRECTWORD: (author, word) => `${author} won this game! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_NOTWORDCHARACTERS: letterscount => `The word must have ${letterscount} letters!`,
			COMMAND_HANGMAN_NOLETTER: 'You entered an invalid character!',
			COMMAND_HANGMAN_NOANSWERMENTION: (author, mention, word) => `${author} didn't give an answer! ${mention} won this game! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_DONTWANTTOPLAY: "We are sorry but the mentioned Discord user doesn't want to play hangman against you!",
			COMMAND_HANGMAN_LETTERORWORDMESSAGENOMENTION: 'Please send a letter (A-Z) or guess the word!',
			COMMAND_HANGMAN_EMBEDTITLECORRECTNOMENTION: letter => `You guessed the letter "**${letter}**" correctly! 😄`,
			COMMAND_HANGMAN_EMBEDTITLECORRECTNOMENTIONWORD: word => `You guessed the word "**${word}**" correctly! 😄`,
			COMMAND_HANGMAN_GAMELOST: word => `You lost this game! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_GAMEWON: word => `You won this game! The word to guess was: "**${word}**"`,
			COMMAND_HANGMAN_EMBEDTITLEWRONGNOMENTION: letter => `You guessed the letter "**${letter}**" wrong! 😢`,
			COMMAND_HANGMAN_EMBEDTITLEWRONGNOMENTIONWORD: word => `You guessed the word "**${word}**" wrong! 😢`,
			COMMAND_HANGMAN_NOANSWER: word => `You didn't give an answer! The word to guess was "**${word}**"`,
			COMMAND_HANGMAN_GUESSEDLETTERALREADY: 'You guessed this letter already!',
			COMMAND_EIGHTBALL_NOINPUT: 'You have to specify what you want to ask the bot!',
			COMMAND_EIGHTBALL_ANSWERS: ['It is certain', 'It is decidedly so', 'Without a doubt', 'Yes definitely', 'You may rely on it', 'As I see it, yes', 'Most likely', 'Outlook good', 'Yes!', 'Signs point to yes', 'Reply hazy try again', 'Ask again later', 'Better not tell you now', 'Cannot predict now', 'Concentrate and ask again', "Don't count on it", 'My reply is no', 'My sources say no', 'Outlook not so good', 'Very doubtful', 'No!', 'Your questions are weird', 'I think so', 'Stop!', 'What?'],
			COMMAND_EIGHTBALL_QUESTION: 'Your question:',
			COMMAND_EIGHTBALL_EMBEDFIELD: 'Answer:',
			COMMAND_ROCKPAPERSCISSORS_NOINPUT: 'You forgot to specify whether you take rock, paper or scissors',
			COMMAND_ROCKPAPERSCISSORS_EMBEDFOOTER: 'Rock-paper-scissors minigame',
			COMMAND_ROCKPAPERSCISSORS_ROCKDRAW: "I've chosen rock! ✊ \nDraw!",
			COMMAND_ROCKPAPERSCISSORS_SCISSORSWIN: "I've chosen scissors! ✌ \nYou won!",
			COMMAND_ROCKPAPERSCISSORS_PAPERLOST: "I've chosen paper! ✋ \nYou lost!",
			COMMAND_ROCKPAPERSCISSORS_PAPERWIN: "I've chosen paper! ✋ \nYou won!",
			COMMAND_ROCKPAPERSCISSORS_ROCKLOST: "I've chosen rock! ✊ \nYou lost!",
			COMMAND_ROCKPAPERSCISSORS_SCISSORSDRAW: "I've chosen scissors! ✌ \nDraw!",
			COMMAND_ROCKPAPERSCISSORS_SCISSORSLOST: "I've chosen scissors! ✌ \nYou lost!",
			COMMAND_ROCKPAPERSCISSORS_PAPERDRAW: "I've chosen paper! ✋ \nDraw!",
			COMMAND_ROCKPAPERSCISSORS_ROCKWIN: "I've chosen rock! ✊ \nYou won!",
			COMMAND_ROCKPAPERSCISSORS_ERROR: "You didn't specify correctly if you want to take rock, paper or scissors!",
			COMMAND_ROCKPAPERSCISSORS_VALIDATION: ['rock', 'paper', 'scissors'],
			COMMAND_ROCKPAPERSCISSORS_ROCK: 'rock',
			COMMAND_ROCKPAPERSCISSORS_PAPER: 'paper',
			COMMAND_ROCKPAPERSCISSORS_SCISSORS: 'scissors',
			COMMAND_PENISSIZECALCULATOR_ANSWERS: ["Your penis is 2.30 millimeters small. There's still more to go on!", "Your penis is 2.80 millimeters long. You did a major step forward, I'm proud of you!", 'Your penis is 3.00 meters long. I think you set a new world record, congratulations!', "Your penis isn't even 1 millimeter small. I would recommend you to consult a doctor.", "Your penis is so small that there isn't a unit. Sorry :(", "Your penis is very big ... 30 meters! I'm speechless...", 'Where is your penis?', 'Do you even have a penis?', 'Oh god that resembles a big sausage', "Wow, that's crazy! 40 centimeters"],
			COMMAND_TICTACTOE_NOMENTION: 'You must mention a user to play TicTacToe!',
			COMMAND_TICTACTOE_NOTONLINE: 'The mentioned user has to be online to play TicTacToe against you!',
			COMMAND_TICTACTOE_BOTMENTION: 'You cannot mention a bot to play TicTacToe!',
			COMMAND_TICTACTOE_ERROR: 'You cannot play with yourself. You have to mention a user against whom you want to play.',
			COMMAND_TICTACTOE_GAMECREATED: 'New TicTacToe Game created!',
			COMMAND_TICTACTOE_TURN: "It's your turn",
			COMMAND_TICTACTOE_TITLE: 'TicTacToe game',
			COMMAND_TICTACTOE_NOANSWERTITLE: "Time's up!",
			COMMAND_TICTACTOE_NOANSWER: (author, user) => `${author} did not answer for 15 seconds why ${user} won this round.`,
			COMMAND_TICTACTOE_WIN: user => `${user} won this round!`,
			COMMAND_TICTACTOE_WANNAPLAY: (mention, author) => `${mention}, do you want to play TicTacToe against ${author}? If yes, answer with '**YES**'!`,
			COMMAND_TICTACTOE_GAMECANCELED: mention => `Game canceled because ${mention} didn't answer or doesn't want to play!`,
			COMMAND_TICTACTOE_GAMEEND: 'Game is over!',
			COMMAND_TICTACTOE_DRAW: "No one has won, it's draw! The next round may be better.",
			COMMAND_HENTAIHAVEN_NOTFIND: 'Could not find any videos to your request.',
			COMMAND_PORNHUBGIF_COULDFINDNOTHING: 'Could not find any gifs to your request.',
			COMMAND_PORNHUBGIF_TYPE: 'You have to decide what type of pornography you want to see.',
			COMMAND_PORNHUBGIF_ERROR: 'Your input may not have any spaces!',
			SEXVIDEO_DURATIONEMBED: duration => `Duration: ${duration} minutes.`,
			COMMAND_JOINROLE_NOINPUT: 'You forgot to enter the name of the role you want to add to the list of the joinroles!',
			COMMAND_JOINROLE_ROLENOTEXIST: "This role doesn't exist. Please check if you entered the right name of the role!",
			COMMAND_JOINROLE_ALREADYADDED: 'You have already added this role to the joinroles of this Discord server!',
			COMMAND_JOINROLE_MAXIMUM: 'This Discord server has reached the maximum of allowed joinroles. The limit is 5!',
			COMMAND_JOINROLE_ROLEADDED: 'Role has been successfully added to the list of the joinroles!',
			COMMAND_JOINROLE_NOINPUTREMOVE: 'You forgot to enter the name of the role you want to remove from the list of the joinroles!',
			COMMAND_JOINROLE_ROLENOTADDED: "You haven't added this role to the joinroles of this Discord server!",
			COMMAND_JOINROLE_ROLEREMOVED: 'Role has been successfully removed from the list of the joinroles!',
			COMMAND_JOINROLE_NOJOINROLES: 'There are no roles on this Discord server which new members will get when they join!',
			COMMAND_JOINROLE_EMBEDTITLE: 'All joinroles:',
			COMMAND_JOINROLE_INVALIDVALIDATION: `You used the command incorrectly. Please use **${this.client.options.prefix}help joinrole** to read the correct usage of the command!`,
			COMMAND_SKIPNUMBER_CURRENTVOTENUMBER: skipnumber => `The current vote number to skip music is ${skipnumber}`,
			COMMAND_SKIPNUMBER_ERROR: 'Your new number of votes to skip music cannot have spaces!',
			COMMAND_SKIPNUMBER_NOINPUT: 'You must enter a number',
			COMMAND_SKIPNUMBER_CANNOTBE0: 'The number cannot be 0',
			COMMAND_SKIPNUMBER_CHANGEDSKIPVOTE: newskipnumber => `The number of votes to skip music has been changed to ${newskipnumber}`,
			MESSAGEEVENT_LEVELUP: (author, level) => `Congratulations ${author}! You just advanced to level ${level}!`,
			COMMAND_GIVEXP_DONE: 'XP has been successfully given to the user!',
			COMMAND_GIVEXP_NOAMOUNT: "You didn't enter an amount of XP!",
			COMMAND_GIVEXP_AMOUNTNAN: "You didn't enter an amount of XP!",
			COMMAND_GIVEXP_ATLEAST1: "Your amount of XP has to be at least 1!",
			COMMAND_REMOVEXP_NOAMOUNT: "You didn't enter an amount of XP!",
			COMMAND_REMOVEXP_AMOUNTNAN: "You didn't enter an amount of XP!",
			COMMAND_REMOVEXP_ATLEAST1: "Your amount of XP has to be at least 1!",
			COMMAND_REMOVEXP_DONE: "XP has been successfully removed from the user!",
			COMMAND_CURRENTLYMUTED_ERROR: "There are currently no active mutes!",
			COMMAND_CURRENTLYMUTED_EMBEDAUTHOR: "Currently muted user:",
			COMMAND_CURRENTLYMUTED_EMBEDDESCRIPTION: (moderatortag, muteddate, remainingmutetime, reason) => `Moderator: ${moderatortag} \nTemporary muted: ${muteddate} \nRemaining mutetime: ${remainingmutetime} \nReason: ${reason}`,
			COMMAND_CURRENTLYBANNED_ERROR: "There are currently no active temporary bans!",
			COMMAND_CURRENTLYBANNED_EMBEDAUTHOR: "Currently temporarily banned user:",
			COMMAND_CURRENTLYBANNED_EMBEDDESCRIPTION: (moderatortag, banneddate, remainingbantime, reason) => `Moderator: ${moderatortag} \nTemporarily banned: ${banneddate} \nRemaining bantime: ${remainingbantime} \nReason: ${reason}`,
			COMMAND_TEMPORARYBAN_YOURSELF: "You cannot temporarily ban yourself!",
			COMMAND_TEMPORARYBAN_NOINPUT: "You must specify a reason for the temporarily ban!",
			COMMAND_TEMPORARYBAN_INVALIDTIMEFORMAT: "You used an invalid format for your temporary ban!",
			COMMAND_TEMPORARYBAN_BANNED: (usertag, bantime) => `${usertag} was successfully banned for ${bantime}!`,
			COMMAND_TEMPORARYBAN_BANNEDBY: "Temporarily banned by",
			COMMAND_TEMPORARYBAN_BANDESCRIPTION: (usertag, userid, reason, bantime) => `**Action**: Temporary ban \n**User**: ${usertag} (${userid}) \n**Reason**: ${reason} \n**Banned for**: ${bantime}`,
			COMMAND_TEMPORARYBAN_AUTOMATICBANDESCRIPTION: (usertag, userid) => `**Action**: Automatic unban \n**User**: ${usertag} (${userid}) \n**Reason**: The bantime has expired`,
			COMMAND_TEMPORARYBAN_AUTOMATICUNBAN: "The ban has expired",
			COMMAND_BAN_YOURSELF: "You cannot ban yourself!",
			COMMAND_BAN_NOINPUT: "You must specify a reason for the ban!",
			COMMAND_BAN_IDCHECK: "This user was not found on this Discord server!",
			COMMAND_BAN_NOPERMISSION: "I cannot ban this user!",
			COMMAND_BAN_BANNED: (usertag) => `${usertag} was successfully banned!`,
			COMMAND_BAN_BANNED_FAILED: (usertag, error) => `${usertag} was unable to be banned! ${error}`,
			COMMAND_BAN_BANNEDBY: "Banned by",
			COMMAND_BAN_BANDESCRIPTION: (usertag, userid, reason) => `**Action**: Ban \n**User**: ${usertag} (${userid}) \n**Reason**: ${reason}`,
			BOTOWNERCOMMANDS_ERROR: "You don't have permissions to execute this command!",
			COMMAND_LEAVESERVER_NOTGUILDID: "You must enter a guild id. For example: `352896116812939264`",
			COMMAND_LEAVESERVER_NOFETCH: "Couldn't fetch this server. Please check if the server ID is correct and the bot is currently on this Discord server!",
			COMMAND_LEAVESERVER_DONE: (guildid) => `The bot has successfully left the server (ID: ${guildid})!`,
			COMMAND_PARTNER_ERROR: "You are not affiliated with LenoxBot!",
			COMMAND_SETPRESENCE_DONE: 'The presence was updated successfully!',
			COMMAND_MEMBERSTATUS_ONLINE: count => `${count} member${count !== 1 ? 's are' : ' is'} online.`,
			COMMAND_MEMBERSTATUS_IDLE: count => `${count} member${count !== 1 ? 's are' : ' is'} idle.`,
			COMMAND_MEMBERSTATUS_DND: count => `${count} member${count !== 1 ? 's do' : ' does'} not want to be disturbed.`,
			COMMAND_MEMBERSTATUS_OFFLINE: count => `${count} member${count !== 1 ? 's are' : ' is'} offline`,
			COMMAND_CREDITS_CREDITHINT: 'Hint how to earn credits quickly:',
			COMMAND_CREDITS_CREDITHINTBODY: prefix => `You ran the command **${prefix}credits** for the first time, so let's give you a little hint on how to earn 30,000 credits within 30 days.\n\nEvery day you have the opportunity to upvote the LenoxBot here: <https://discordbots.org/bot/354712333853130752/vote>\nEach upvote gives you between 100-1000 credits (In the weekend you can get up to 200-2000).\nAfter 12 hours you can then vote again...`,
			COMMAND_CREDITS_CREDITS: 'Credits:',
			COMMAND_LOOP_NOCHANNEL: 'You need to be in a voice channel to toggle looping.',
			COMMAND_LOOP_NOQUEUE: 'The sound of silence is always looping, please add some music to the queue first!',
			COMMAND_LOOP_IS: (loop) => `Queue looping has been ${loop ? '`enabled`' : '`disabled`'}.`,
			COMMAND_PLAY_QUEUELIMIT_REACHED: "Only a maximum of 8 songs can be queued on this Discord server. If you want to add more, you only have to pay 1€! More information can be found on <https://lenoxbot.com/donate> or join our Discord support server: <https://lenoxbot.com/discord>",
			COMMAND_PLAY_SONGLENGTHLIMIT: "You can only add videos that are less than 30 minutes to the queue. If you want to queue longer videos, you only have to pay 1€! More information can be found on <https://lenoxbot.com/donate> or join our Discord support server: <https://lenoxbot.com/discord>",
			MUSIC_NOTINVOICECHANNEL: "You must be in a voice channel!",
			MUSIC_NOAUDIOBEINGPLAYED: "There is no audio being played.",
			MUSIC_PLAYBACKFINISHED: "Playback finished.",
			MUSIC_VOICECHANNELFULL: "I do not have permission to join your voice channel; it is full.",
			MUSIC_JOINVOICECHANNELNOPERMS: "I do not have permission to join your voice channel!",
			MUSIC_UNABLETOPLAYAUDIO: "I was unable to play that audio!",
			MUSIC_UNABLETOFINDVIDEO: "I was unable to find that video!",
			MUSIC_CONNECTIONERROR: (error) => `Connection error!\n\`${error}\``,
			MUSIC_DISPATCHERERROR: (error) => `Dispatcher error!\n\`${error}\``,
			MUSIC_YOUTUBEAPIKEYNOTSET: "You must set a YouTube API V3 Key in the .env file!",
			MUSIC_INVALIDYOUTUBEAPIKEY: "You must provide a valid YouTube API V3 Key in the .env file!",
			MUSIC_EXCEEDEDQUOTA: "You have exceeded your quota for that YouTube API V3 Key, please change it or get more quota!",
			MUSIC_ADDEDNUMITEMSTOQUEUE: (amount) => `Done, Added \`${amount}\` items to the queue.`,
			MUSIC_UNKNOWNTITLETITLE: "Unknown title",
			MUSIC_DURATIONDESCRIPTION: "Duration",
			MUSIC_ADDEDTOQUEUEFOOTER: "Added to queue",
			MUSIC_NOWPLAYINGFOOTER: "Now Playing",
			MUSIC_SUCCESSFULLYDISCONNECTED: "Successfully disconnected from voice channel.",
			MUSIC_FAILEDTODISCONNECT: "Failed to disconnect from voice channel!",
			MUSIC_STREAMSCANNOTBEPAUSED: "Streams cannot be paused.",
			MUSIC_ALREADYPAUSED: "The playback is already paused.",
			MUSIC_PAUSED: "The playback has been paused.",
			MUSIC_PAUSEDFAILED: "The playback has failed to pause.",
			MUSIC_SKIPPEDALONE: "The playback was successfully skipped without poll, because there is only one user in the channel.",
			MUSIC_SKIPPED: "The playback has been skipped by the poll successfully.",
			MUSIC_FAILEDTOSKIP: "The playback has failed to skip.",
			MUSIC_ALREADYSKIPVOTED: "You have already voted to skip this audio!",
			MUSIC_NEWSKIPVOTE: (author, skipnumber) => `${author} started a new quote to skip the current audio! ${skipnumber} votes are needed to skip the current audio.`,
			MUSIC_ANOTHERSKIPVOTE: (author, currentvotes, skipnumber) => `${author} also wants to skip the current audio. ${currentvotes}/${skipnumber} votes are needed to skip the current audio.`,
			COMMAND_SKIPVOTEDEACTIVATED: "The skipvote function has to be activated before you can use this command",
			COMMAND_QUEUE_NOWPLAYING: (title) => `Now playing: ${title}`,
			COMMAND_QUEUE_AUDIOQUEUE: (play_pause, repeat) => `Audio queue | ${play_pause} ${repeat}`,
			COMMAND_QUEUE_EMBEDFOOTER: (duration) => `Total Duration: ${duration} | Page `,
			COMMAND_NOPREMIUM: "This is a premium-only command. To get access to the premium-only features, you only have to pay 1€! More information can be found on <https://lenoxbot.com/donate> or join our Discord support server: <https://lenoxbot.com/discord>.",
			COMMAND_VOLUME_CURRENTVOLUME: (volume) => `The current volume is: \`${volume}%\`.`,
			COMMAND_VOLUME_MUSTBEBETWEEN: "Volume must be between `0-200`!",
			COMMAND_VOLUME_VOLSETTO: (newVolume) => `Volume set to \`${newVolume}%\`.`,

			/**
			 * @Command_Dscriptions
			 */
			COMMAND_PING_DESCRIPTION: 'Runs a connection test to Discord.',
			COMMAND_PREFIX_DESCRIPTION: 'Change the command prefix the bot uses in your server.',
			COMMAND_TRANSLATE_DESCRIPTION: 'Gives you informations about our translation project.',
			COMMAND_VOTE_DESCRIPTION: 'All details about voting for LenoxBot.',
			COMMAND_GITHUB_DESCRIPTION: 'All details about our GitHub Repository of LenoxBot.',
			COMMAND_EVAL_DESCRIPTION: 'Evaluates arbitrary Javascript. Reserved for bot owner.',
			COMMAND_EVAL_EXTENDEDHELP: [
				'The eval command evaluates code as-in, any error thrown from it will be handled.',
				'It also uses the flags feature. Write --silent, --depth=number or --async to customize the output.',
				'The --silent flag will make it output nothing.',
				"The --depth flag accepts a number, for example, --depth=2, to customize util.inspect's depth.",
				'The --async flag will wrap the code into an async function where you can enjoy the use of await, however, if you want to return something, you will need the return keyword.',
				'The --showHidden flag will enable the showHidden option in util.inspect.',
				"If the output is too large, it'll send the output as a file, or in the console if the bot does not have the ATTACH_FILES permission."
			].join('\n'),
			COMMAND_EXEC_DESCRIPTION: 'Execute commands in the terminal, use with EXTREME CAUTION.',
			COMMAND_EXEC_EXTENDEDHELP: [
				'The --silent flag runs in silent mode, not showing any console output',
				'The --language <lang> flag sets the language of the outputted code block',
				'The --raw flag sends the output raw, without any code blocks',
				'The --delete flag deletes the command message',
				'The --file flag interperts the response as a file URL/path to send',
				'The --filename <name> flag sets the name for the sent file',
				'The --wait flag waits for the program to finish before sending the output',
				'The --timeout <ms> flag sets a timeout'
			].join('\n'),
			COMMAND_HEAPSNAPSHOT_DESCRIPTION: 'Creates a heapdump for finding memory leaks.',
			COMMAND_HEAPSNAPSHOT_EXTENDEDHELP: [
				'The heapsnapshot command is very useful for bots that have memory issues, it uses the heapdump library',
				'which freezes the entire process for a moment to analyze all elements from the process\' HEAP, NEVER share',
				'heapsnapshot files with anybody, as everything your bot holds is included in that file.\n\nTo open heapsnapshot',
				'files, open Google Chrome, open Developer Tools, go to the tab Memory, and in Profiles, click on the button "load".',
				'Finally, open the profile and you will be given a table of all objects in your process, have fun!\n\nP.S:',
				'heapsnapshot files are as big as the amount of RAM you use, in big bots, the snapshots can freeze the bot',
				'much longer and the files can be much heavier.'
			].join(' '),
			COMMAND_HANGMAN_DESCRIPTION: 'Play hangman alone or with your Discord friends.',
			COMMAND_EIGHTBALL_DESCRIPTION: 'Ask the bot a question.',
			COMMAND_EIGHTBALL_EXTENDEDHELP: 'eightball Am I pretty?',
			COMMAND_ROCKPAPERSCISSORS_DESCRIPTION: 'Play a round of rock-paper-scissors with the bot.',
			COMMAND_ROCKPAPERSCISSORS_EXTENDEDHELP: 'rockpaperscissors scissors',
			COMMAND_PENISSIZECALCULATOR_DESCRIPTION: 'Calculates the size of the penis of you or a user.',
			COMMAND_PENISSIZECALCULATOR_EXTENDEDHELP: ['penissizecalculator', 'penissizecalculator @Tester#8234'].join('\n'),
			COMMAND_TICTACTOE_DESCRIPTION: 'Play a round of TicTacToe against another Discord user.',
			COMMAND_TICTACTOE_EXTENDEDHELP: ['tictactoe @Tester#7584'].join('\n'),
			COMMAND_HENTAIHAVEN_DESCRIPTION: 'Random HentaiHaven videos.',
			COMMAND_PORNHUBGIF_DESCRIPTION: 'Searches for Pornhub gifs.',
			COMMAND_PORNHUBGIF_EXTENDEDHELP: ['pornhubgif ass', 'pornhubgif tits'].join('\n'),
			COMMAND_PORNHUBVIDEO_DESCRIPTION: 'Searches for Pornhub videos.',
			COMMAND_PORNHUBVIDEO_EXTENDEDHELP: ['pornhubvideo ass', 'pornhubvideo tits'].join('\n'),
			COMMAND_REDTUBE_DESCRIPTION: 'Searches for Redtube gifs.',
			COMMAND_REDTUBE_EXTENDEDHELP: ['redtube ass', 'redtube tits'].join('\n'),
			COMMAND_SEXGIF_DESCRIPTION: 'Searches for sex gifs.',
			COMMAND_SEXGIF_EXTENDEDHELP: ['sexgif ass', 'sexgif tits'].join('\n'),
			COMMAND_SEXVIDEO_DESCRIPTION: 'Searches for sex videos.',
			COMMAND_SEXVIDEO_EXTENDEDHELP: ['sexvideo ass', 'sexvideo tits'].join('\n'),
			COMMAND_JOINROLE_DESCRIPTION: 'Roles that new guildmembers will get when they join the Discord server.',
			COMMAND_JOINROLE_EXTENDEDHELP: ['joinrole list', 'joinrole add test', 'joinrole remove test'].join('\n'),
			COMMAND_SKIPNUMBER_DESCRIPTION: 'Changes the necessary votes to skip music for users.',
			COMMAND_SKIPNUMBER_EXTENDEDHELP: ['skipnumber 3'].join('\n'),
			COMMAND_GIVEXP_DESCRIPTION: 'Gives an user a specific amount of XP on this discord server.',
			COMMAND_GIVEXP_EXTENDEDHELP: ['givexp 327533963923161090 1000'].join('\n'),
			COMMAND_REMOVEXP_DESCRIPTION: 'Removes a specific amount of XP on this discord server from a user.',
			COMMAND_REMOVEXP_EXTENDEDHELP: ['removexp 327533963923161090 1000'].join('\n'),
			COMMAND_BAN_DESCRIPTION: 'Ban a user from the discord server with a certain reason.',
			COMMAND_BAN_EXTENDEDHELP: ['ban @Monkeyyy11#7584 Toxic behavior', 'ban 406177968252256257 Spam'].join('\n'),
			COMMAND_CURRENTLYMUTED_DESCRIPTION: "Shows you all currently muted users on this Discord server.",
			COMMAND_CURRENTLYBANNED_DESCRIPTION: "Shows you all currently banned users on this Discord server.",
			COMMAND_TEMPORARYBAN_DESCRIPTION: "Bans a user temporarily.",
			COMMAND_LEAVESERVER_DESCRIPTION: "Leaves a discord server on which the bot has joined.",
			COMMAND_LEAVESERVER_EXTENDEDHELP: ['leaveserver 8738704872894987'].join('\n'),
			COMMAND_PARTNER_DESCRIPTION: "With this command you can use the embed of LenoxBot and your partnered server.",
			COMMAND_PARTNER_EXTENDEDHELP: ['partner lenoxbot'].join('\n'),
			COMMAND_SETPRESENCE_DESCRIPTION: 'Sets a new presence for the bot.',
			COMMAND_SETPRESENCE_EXTENDEDHELP: ['setpresence LenoxBot'].join('\n'),
			COMMAND_CREDITS_DESCRIPTION: 'Shows how many credits you or another user has.',
			COMMAND_CREDITS_EXTENDEDHELP: ['credits', 'credits @Monkeyyy11#7584'].join('\n'),
			COMMAND_PLAY_DESCRIPTION: 'Searches for music that matches to your request.',
			COMMAND_PLAY_EXTENDEDHELP: ['play Parkway Drive - Boneyards'].join('\n'),
			COMMAND_LOOP_DESCRIPTION: '(Un)Loop the music queue.',
			COMMAND_LOOP_EXTENDEDHELP: ['loop'].join('\n'),
			COMMAND_STOP_DESCRIPTION: 'Stops the current music and the bot leaves the voice channel.',
			COMMAND_STOP_EXTENDEDHELP: ['stop'].join('\n'),
			COMMAND_PAUSE_DESCRIPTION: "Forces the bot to skip the current song without a poll!",
			COMMAND_PAUSE_EXTENDEDHELP: ['pause'].join('\n'),
			COMMAND_SKIP_DESCRIPTION: "Allows the users to skip a song with a poll.",
			COMMAND_SKIP_EXTENDEDHELP: ['skip'].join('\n'),
			COMMAND_QUEUE_DESCRIPTION: "Shows the current audio queue.",
			COMMAND_QUEUE_EXTENDEDHELP: ['queue'].join('\n'),
			COMMAND_VOLUME_DESCRIPTION: "Changes the volume of the bot.",
			COMMAND_VOLUME_EXTENDEDHELP: ['volume 100', 'volume 200'].join('\n'),
		};
	}

	async init() {
		await super.init();
	}
};
